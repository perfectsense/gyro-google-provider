google::bucket logs-by-andrew
    name: 'example-logging-by-andrew'
    location: 'US-CENTRAL1'
end

google::bucket bucket-1-by-andrew
    name: 'example-one-by-andrew'
    location: 'US-CENTRAL1'
    predefined-acl: 'publicRead'
    predefined-default-object-acl: 'bucketOwnerFullControl'
    default-event-based-hold: true
    storage-class: 'STANDARD'

    labels: {
        foo: 'bar_1900',
        bar: 'foo_1800'
    }

    cors
        max-age-seconds: 3200
        method: ['GET']
        origin: ['*']
        response-header: ['application-x-test']
    end

    cors
        max-age-seconds: 3300
        method: ['POST']
        origin: ['*']
        response-header: ['application-x-test']
    end

    billing
        requester-pays: false
    end

    iam-configuration
        uniform-bucket-level-access
            enabled: false
        end
    end

    lifecycle
        rule
            action
                type: 'Delete'
            end
            condition
                age: 7
           end
        end

        rule
            action
                type: 'Delete'
            end

            condition
                num-newer-versions: 10
            end
        end

        rule
            action
               type: 'Delete'
            end

            condition
                is-live: true
                age: 15
            end
        end
    end

    logging
        log-bucket: $(google::bucket logs-by-andrew)
        log-object-prefix: 'gyro'
    end

    retention-policy
        retention-period: 3200
    end

    versioning
        enabled: false
    end

    website
        main-page-suffix: 'index.html'
        not-found-page: '404.jpg'
    end
end

google::compute-health-check health-check-example-test-by-andrew
    check-interval-sec: 30
    description: "The description goes here."
    healthy-threshold: 8
    name: "http-hc1-test-by-andrew"
    timeout-sec: 29
    unhealthy-threshold: 6

    http-health-check
        proxy-header: "PROXY_V1"
        request-path: "/myapp"
        response: "okay"
    end
end

google::compute-backend-bucket gyro-backend-bucket-test
    name: 'gyro-backend-bucket-test'
    description: 'Global backend bucket test by Andrew'
    bucket: $(google::bucket bucket-1-by-andrew)
end

google::compute-network lb-ig-network-example
    name: "lb-ig-network-example"
    description: "lb-ig-network-example"
    routing-mode: "Regional"
end

google::compute-instance-group lb-instance-group-example
    name: "lb-instance-group-example"
    description: "instance-group-example-description"
    zone: "us-central1-b"
    network: $(google::compute-network lb-ig-network-example)

    named-port
        name: "port-a"
        port: 123
    end

    named-port
        name: "port-b"
        port: 490
    end
end

google::compute-backend-service gyro-backend-service-test
    name: 'gyro-backend-service-test'
    description: 'Global backend service test by Andrew'
    backend
        group: $(google::compute-instance-group lb-instance-group-example)
    end
    health-check: [ $(google::compute-health-check health-check-example-test-by-andrew) ]
end

google::compute-url-map gyro-url-map-test
    name: 'gyro-url-map-test'
    description: 'URL map test by Andrew'
    default-backend-service: $(google::compute-backend-service gyro-backend-service-test)
    host-rule
        hosts: [ 'example.com' ]
        path-matcher: 'abc-path'
    end
    path-matcher
        name: 'abc-path'
        default-backend-service: $(google::compute-backend-service gyro-backend-service-test)
        path-rule
            backend-bucket: $(google::compute-backend-bucket gyro-backend-bucket-test)
            paths: [ '/abc' ]
        end
    end
end

google::compute-target-http-proxy gyro-target-http-test
    name: 'gyro-target-http-test'
    description: 'URL target http test by Andrew'
    url-map: $(google::compute-url-map gyro-url-map-test)
end

google::compute-global-forwarding-rule gyro-global-forwarding-rule-test
    name: 'gyro-global-forwarding-rule-test'
    description: 'URL global forwarding rule test by Andrew'
    ip-protocol: 'TCP'
    load-balancing-scheme: 'EXTERNAL'
    port-range: '80-80'
    target-http-proxy-resource: $(google::compute-target-http-proxy gyro-target-http-test)
end

